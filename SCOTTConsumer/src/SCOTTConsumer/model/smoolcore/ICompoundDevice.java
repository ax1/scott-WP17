
/*******************************************************************************
* Copyright (c) 2018 Tecnalia Research and Innovation.
* All rights reserved. This program and the accompanying materials
* are made available under the terms of the Eclipse Public License v1.0
* which accompanies this distribution, and is available at
* http://www.eclipse.org/legal/epl-v10.html
* This file is a result of OWL 2 java transformation using EMF
* 
* Generated by SMOOL SDK Wizard
*******************************************************************************/ 
package SCOTTConsumer.model.smoolcore;
       
import org.smool.kpi.model.smart.IAbstractOntConcept;
import SCOTTConsumer.model.smoolcore.IAlarm;
       
import SCOTTConsumer.model.smoolcore.ISimpleDevice;
       
import SCOTTConsumer.model.smoolcore.ISecurity;
       

/**
 * This class implements interface for the ontology concept CompoundDevice
 * including all its properties.
 * @author Genrated via EMF OWL to java transformation
 * @version 1.0
 */

public interface ICompoundDevice extends IAbstractOntConcept, IDevice{

   /*
 	* PROPERTIES: GETTERS AND SETTERS
 	*/
   
 	/**
 	* Sets the deviceID property.
 	* @param deviceID String value
 	*/
 	public ICompoundDevice setDeviceID(String deviceID );

	/**
 	* Gets the deviceID property.
 	* @return a String value
	*/
 	public String getDeviceID();

 	/**
 	* Sets the vendor property.
 	* @param vendor String value
 	*/
 	public ICompoundDevice setVendor(String vendor );

	/**
 	* Gets the vendor property.
 	* @return a String value
	*/
 	public String getVendor();

 	/**
 	* Adds the alarms property.
 	* @param alarms IAlarm value to add
 	*/
 	public void addAlarms(IAlarm alarms );

	/**
 	* Removes the alarms property.
 	* @param alarms IAlarm value to remove
	*/
 	public void removeAlarms(IAlarm alarms );

 	/**
 	* Adds the composedOf property.
 	* @param composedOf ISimpleDevice value to add
 	*/
 	public void addComposedOf(ISimpleDevice composedOf );

	/**
 	* Removes the composedOf property.
 	* @param composedOf ISimpleDevice value to remove
	*/
 	public void removeComposedOf(ISimpleDevice composedOf );

 	/**
 	* Sets the securityData property.
 	* @param securityData ISecurity value
 	*/
 	public ICompoundDevice setSecurityData(ISecurity securityData );

	/**
 	* Gets the securityData property.
 	* @return a ISecurity value
	*/
 	public ISecurity getSecurityData();
}
